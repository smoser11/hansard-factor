{
    "contents" : "###################\n#Geo Prod Analysis#\n###################\nrm(list=ls())\n\n#libraries\nlibrary(DIRLib)\n\n#data\nprod<-getCleanProdData('9Oct12')\ndatP<-prod$datP\ndatP.use<-prod$datP.use\n\ndatGrid<-read.csv('../productionFiles/EFGridData-GEO-9Oct12.csv')\n\n#making the production metric\neProd<-(datP$maxIpGas/20)+datP$maxIpOil\n#eProd<-datP$maxIpGas\n\nuse<-which(datP$heelFormation=='Structure_Buda'|datP$heelFormation=='Structure_Edwards')\ndatP.use<-datP.use[use,]\ndatP<-datP[use,]\neProd<-eProd[use]\n\nuse<-which(eProd>0)\neProd<-eProd[use]\ndatP.use<-datP.use[use,]\ndatP<-datP[use,]\n#build model\nbm<-build.model(datP.use,log(eProd),per.in=0.8,nvars=30)\n\n#load in model results\nload(paste(bm,'model',sep='_'))\nvars<-read.csv(paste(bm, 'vars.csv',sep='_'))\nvars<-as.character(vars$x)\n\n#predictions\npred<-predict.prod(datP.use,m,vars,NBreaks=10,filename=bm)\ntable(pred$grade)\n\n#saving the results\nout<-data.frame(datP$hpdiEntityId,datP$api,eProd,pred)\ncolnames(out)<-c('hpdiEntityId','api','eProd-20.1','ModelProd-barrels','grade')\nout$'ModelProd-barrels'<-(out$'ModelProd-barrels')^2\ntime<-bm\nout$grade<-as.factor(as.character(out$grade))\nFILE<-paste(time,'grade-file.csv',sep=\"_\")\nwrite.csv(out,file=FILE,row.names=FALSE)\n\n#contribution of variables\nR2s<-read.csv(paste('R2', '1349820586.80191'))\nR2.diff<-R2s[-1,2]-R2s[-nrow(R2s),2]\ncontrib<-c(R2s[1,2],R2.diff)/sum(c(R2s[1,2],R2.diff))\norder<-order(contrib,decreasing=TRUE)\nuse<-1:length(vars)\nbarplot(contrib[use][order[1:length(use)]],,ylim=c(0,0.3),names=vars,las=2,cex.names=0.5)\n\n#a couple of checks\nxyplot(pred$pred~pred$grade)\nxyplot(eProd~pred$grade)\n\n#lateral length\nxyplot(eProd~datP$lateralLength|out$grade)\nm.test<-lm(eProd~datP$lateralLength*out$grade)\n\nuse<-which(datP$playSubArea1=='Sugarkane')\nxyplot(eProd[use]~datP$lateralLength[use]|out$grade[use])\nm.test<-lm(eProd[use]~datP$lateralLength[use]*out$grade[use])\n\nm.test2<-lm(eProd~datP$heelFormation*out$grade)\n\ntab<-table(datP$heelFormation,out$grade)\nbarplot(tab,col=c('#018571','#DFC27D','#A6611A','#F5F5F5','#80CDC1'))\n\ntab2<-table(datP$toeFormation,out$grade)\nbarplot(tab2,col=c('#018571','#DFC27D','#A6611A','#80CDC1'))\n\ntab3<-table(datP$playSubArea1,out$grade)\n#barplot(tab3,col=c(''))\nbarplot(tab3)\n\ntab4<-table(datP$operator,out$grade)\n\n#creating a prediction plot file (can only have 9 grades for ggplot)\npred.plot<-predict.prod(datP.use,m,vars,NBreaks=9)\npred.plot<-data.frame(datP[,c(25,24)],eProd,pred.plot)\ncolnames(pred.plot)<-c('long','lat','obsProd','predProd','grade')\nrm0<-which(pred.plot$long==0)\nif(length(rm0)>0){\npred.plot<-pred.plot[-rm0,]\n}\npred.plot$grade<-as.factor(as.character(pred.plot$grade))\n\np1<-ggplot(pred.plot,aes(long,lat,colour=grade))\np1+geom_point()+scale_colour_brewer(palette='Set1')\n\np1<-ggplot(out,aes(grade,eProd,fill=grade))\np1+geom_boxplot(outlier.size=0)+scale_fill_manual(values=c('#7F0000','#B30000','#D7301F','#EF6548','#FC8D59','#FDBB84','#FDD49E','#FEE8C8','#FFF7EC','#FFF7EC'))+scale_y_continuous(limits=c(0,50000),expand=c(0,0))+scale_x_discrete(expand=c(0.025,0.025))\n\n#in vs. out sample\n#samp<-read.csv('model20120517/eProd_samp.csv')\nsamp<-read.csv(paste(bm,'samp.csv',sep='_'))\nsamp<-samp$x\nSAMP<-rep(0,nrow(pred.plot))\nSAMP[samp]<-1\nSAMP<-as.factor(SAMP)\n\np2<-ggplot(pred.plot,aes(grade,obsProd,fill=SAMP))\np2+geom_boxplot()+scale_colour_brewer(palette='Set1')\n\n################################\n#testing for multivariate diffs#\n################################\nvars\ndata<-datP.use\ncols.sel <- c()\n    for (i in 1:length(vars)) {\n        use.i <- which(colnames(data) == (vars)[i])\n        cols.sel <- c(cols.sel, use.i)\n    }\n    dat.pred <- data[, cols.sel]\n\ngroups.pred<-as.numeric(pred.plot$grade)\n\nPermuteLDA(dat.pred,groups.pred,NPerm=1000,Missing.Data='Remove') \n\nmake.less<-which(groups.pred>6)\ngroups.pred[make.less]<-6\n\nldaPlot(as.matrix(dat.pred),groups.pred)\n\n#grids\ndir<-'../analysisScripts/'\ninterp.out<-datGrid[,-c(1:8)]\nfor(b in 1:ncol(interp.out)){\n  load(paste(dir,b,' spline',sep=''))\n  bs.b<-predict(bs.b,interp.out[,b])\t\n  colnames(bs.b)<-paste(colnames(interp.out)[b],letters[1:ncol(bs.b)],sep='.')\n  interp.out<-cbind(interp.out,bs.b)\n}\ndatGrid<-data.frame(datGrid[,1:8],interp.out)\n\nresponseName<-bm\nBPs<-read.csv(paste(responseName,' breakPoints.csv',sep=''))[,-1]\n\n#predicting production\npred.grid<-predict.prod(interp.out,m,vars,10,newcut=FALSE,breakPoints=BPs,filename='test')\ntable(pred.grid$grade)\ngrades<-data.frame(datGrid[,1:8],pred.grid)\nwrite.csv(grades, paste(time,'grid-grade-file.csv',sep=\"_\"),row.names=FALSE)\n\n#checking against datP.use\npred.check<-predict.prod(datP.use,m,vars,10,newcut=FALSE,breakPoints=BPs,filename='test')\ntable(pred.check$grade)\ntable(out$grade)\n\n\nfeat<-matrix(nrow=nrow(datGrid),ncol=4)\nfeat<-cbind(datGrid[,1:6],feat)\ncolnames(feat)<-c(colnames(datGrid[,1:6]),'AC','EFU','EFL','B-E')\nfeat[,10]<-pred.grid$pred\nwrite.csv(feat, file='features_grade_9Oct12.csv',row.names=FALSE)",
    "created" : 1366323474859.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "431402528",
    "id" : "1CF77A7F",
    "lastKnownWriteTime" : 1363190988,
    "path" : "~/Documents/course_project/digeo/Rfiles/efgrading/AnalysisScripts/prodAnalysis.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}